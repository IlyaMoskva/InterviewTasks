package com.company.leetcode.maps;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/**
 * LC 389. Find the Difference
 * You are given two strings s and t.
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * Return the letter that was added to t.

 * Example 1:
 * Input: s = "abcd", t = "abcde"
 * Output: "e"
 * Explanation: 'e' is the letter that was added.

 * Example 2:
 * Input: s = "", t = "y"
 * Output: "y"

 * Constraints:
 * 0 <= s.length <= 1000
 * t.length == s.length + 1
 * s and t consist of lowercase English letters.

 * Easy to understand solution with O(N) complexity.
 * Hint: even better to use ^== for symbols - XOR operation for arrays.
 */
public class FindDifference {
    public char findTheDifference(String s, String t) {
        int[] symbols = new int[26];
        for (char ch : t.toCharArray()) {
            symbols[ch-'a']++;
            System.out.print(ch-'a');
        }
        for (char ch : s.toCharArray()) {
            symbols[ch-'a']--;
        }
        for (int i=0; i<26; i++) {
            if (symbols[i] >0)
                return (char)('a'+i);
        }
        return '-';
    }
}
